generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  google
  credentials
}

model User {
  id          String      @id @default(cuid())
  name        String?
  email       String?
  password    String?
  provider    Provider    @default(google)
  createdAt   DateTime    @default(now())
  timeEntries TimeEntry[]
  tasks       Task[]
  reports     Report[]
  Project     Project[]

  @@unique([provider, email], name: "provider_email")
}

model Project {
  id          String      @id @default(cuid())
  name        String
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  timeEntries TimeEntry[]
  tasks       Task[]
}

model TimeEntry {
  id          String    @id @default(cuid())
  startTime   DateTime  @default(now())
  endTime     DateTime?
  description String?
  duration    Int?
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   String?
  task        Task?     @relation(fields: [taskId], references: [id])
  taskId      String?
  createdAt   DateTime  @default(now())
}

enum Status {
  pending
  inprogress
  completed
}

enum Priority {
  low
  mid
  high
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      Status      @default(pending)
  priority    Priority    @default(low)
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  project     Project?    @relation(fields: [projectId], references: [id])
  projectId   String?
  TimeEntries TimeEntry[]
  createdAt   DateTime    @default(now())
}

model Report {
  id           String   @id @default(cuid())
  title        String
  generatedAt  DateTime @default(now())
  filterUsed   Json?
  dataSnapshot Json
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
}
